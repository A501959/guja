package com.wadpam.guja.oauth2.dao;

import com.google.inject.Inject;

import com.wadpam.guja.oauth2.domain.DConnection;
import net.sf.mardao.dao.Supplier;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Collection;

/**
 * Implementation of Business Methods related to entity DConnection.
 * This (empty) class is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2014-12-02T21:52:55.127+0100.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
public class DConnectionDaoBean extends GeneratedDConnectionDaoImpl
{
  private static final Logger LOGGER = LoggerFactory.getLogger(DConnectionDaoBean.class);


  @Inject
  public DConnectionDaoBean(Supplier supplier) {
    super(supplier);
  }

  public DConnection createConnection(String providerId, String providerUserId,
                                      String access_token, String refresh_token, Integer expiresInSeconds,
                                      Long userId, Collection<String> roles)  {

    LOGGER.debug("Create connection {}", userId);

    // TODO Missing implementation

    return new DConnection();

  }



}
